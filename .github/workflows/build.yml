name: Build

on:
    push: ~
    pull_request: ~
    release:
        types: [created]
    workflow_dispatch: ~

jobs:
    tests:
        runs-on: ubuntu-latest

        name: PHP ${{ matrix.php }} - ${{ matrix.symfony-version }} - ${{ matrix.stability }}

        strategy:
            fail-fast: false
            matrix:
                php: [8.2]
                stability: [ prefer-stable ]
                symfony-version: [ '7.3' ]
                include:
                  - symfony-version: 6.4
                    php: '8.1'
                    stability: prefer-lowest
                  - symfony-version: 6.4
                    php: '8.1'
                    stability: prefer-stable
                  - symfony-version: 7.3
                    php: '8.4'
                    stability: prefer-stable

        env:
            APP_ENV: test

        steps:
            -
                uses: actions/checkout@v4

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl
                    tools: symfony
                    coverage: none

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -
                name: Cache Composer
                uses: actions/cache@v4
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-

            -
                name: Install PHP dependencies
                env:
                      SYMFONY_REQUIRE: ${{ matrix.symfony-version }}
                run: |
                      composer global config --no-plugins allow-plugins.symfony/flex true
                      composer global require --no-progress --no-scripts --no-plugins symfony/flex
                      composer update --no-interaction --prefer-dist

            -
                name: Run analysis
                run: composer validate --strict

            -
                name: Run PHPUnit
                run: vendor/bin/phpunit --configuration phpunit.ci.xml --coverage-clover clover.xml
